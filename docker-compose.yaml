services:
  frontend:
    build: frontend
    init: true
    ports:
      - "3000:3000"

  backend:
    build: backend
    init: true
    ports:
      - "8080:8080"
      - "40000:40000" # debugger port
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - backend/.env
    environment:
      SERVER_URL: http://localhost:8080
      PORT: 8080
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: secret
      DB_NAME: bee
      DB_OPTS: sslmode=disable # sslmode=require for prod

  database:
    image: postgres:16.3-alpine3.20
    ports:
      - "5432:5432" # This is only used for connecting to the database during local development
    volumes:
      - bee-postgres-data:/var/lib/postgresql/data
      - ./backend/sql-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 3
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret

  influxdb2:
    image: influxdb:2.7-alpine
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: beeci
      DOCKER_INFLUXDB_INIT_PASSWORD: BeeCI2021@
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: 9uNp_AJQknsl8OWY65VGyAVZ0wpLXrm9Ep9_4L4-LJJWkP4HJxQvgMCd0vIElfFVU-9cIMdPgPGuUZvaDJsn5g==
      DOCKER_INFLUXDB_INIT_ORG: beeci
      DOCKER_INFLUXDB_INIT_BUCKET: home
    volumes:
      - type: volume
        source: influxdb2-data
        target: /var/lib/influxdb2
      - type: volume
        source: influxdb2-config
        target: /etc/influxdb2

volumes:
  influxdb2-data:
  influxdb2-config:
  bee-postgres-data:
